// Generated by CoffeeScript 1.9.0
(function() {
  var TitleElement, TitleManager, UpdateTitlePanel;

  UpdateTitlePanel = (function() {
    function UpdateTitlePanel(_at_textvalue, onupdate) {
      this.textvalue = _at_textvalue;
      if (this.textvalue == null) {
        this.textvalue = "";
      }
      this.divider = {
        type: "div",
        cls: "divider"
      };
      this.input = {
        type: "div",
        cls: "ui mini input",
        children: {
          type: "input",
          inputtype: "text",
          inputvalue: this.textvalue,
          onkeyup: (function(_this) {
            return function(e) {
              return _this.textvalue = e.target.value;
            };
          })(this)
        }
      };
      this.ok = {
        type: "div",
        cls: "ui circular mini icon basic button",
        onclick: (function(_this) {
          return function() {
            return onupdate(true, _this.textvalue);
          };
        })(this),
        children: {
          type: "i",
          cls: "checkmark icon"
        }
      };
      this.cancel = {
        type: "div",
        cls: "ui circular mini icon basic button",
        onclick: (function(_this) {
          return function() {
            return onupdate(false);
          };
        })(this),
        children: {
          type: "i",
          cls: "remove icon"
        }
      };
      this.controls = [this.input, this.ok, this.cancel];
    }

    UpdateTitlePanel.prototype.dom = function() {
      var x;
      return {
        type: "div",
        cls: "item",
        children: {
          type: "div",
          cls: "ui small breadcrumb",
          children: (function() {
            var _i, _len, _ref, _results;
            _ref = this.controls;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              x = _ref[_i];
              _results.push({
                type: "div",
                cls: "section",
                children: [x, this.divider]
              });
            }
            return _results;
          }).call(this)
        }
      };
    };

    return UpdateTitlePanel;

  })();

  TitleElement = (function() {
    function TitleElement(_at_textvalue, _at_manager) {
      this.textvalue = _at_textvalue;
      this.manager = _at_manager;
      this.id = "titleelement:" + (Math.random()) + ".0";
      this.placeholder = "Add title";
    }

    TitleElement.prototype.text = function() {
      return this.textvalue || this.placeholder;
    };

    TitleElement.prototype.dom = function() {
      var divider, edit, title;
      return {
        type: "div",
        id: "" + this.id,
        cls: "item",
        children: {
          type: "div",
          cls: "content",
          children: {
            type: "div",
            cls: "ui breadcrumb",
            children: [
              edit = {
                type: "div",
                cls: "section",
                children: {
                  type: "div",
                  cls: "ui secondary basic mini icon button",
                  onclick: (function(_this) {
                    return function() {
                      return _this.manager.editTitle(_this);
                    };
                  })(this),
                  children: {
                    type: "i",
                    cls: "write icon"
                  }
                }
              }, divider = {
                type: "div",
                cls: "divider"
              }, title = {
                type: "div",
                cls: "section " + (this.textvalue ? "pl-text-primary" : "pl-text-muted"),
                title: "" + (this.text())
              }
            ]
          }
        }
      };
    };

    return TitleElement;

  })();

  TitleManager = (function() {
    function TitleManager(_at_parent, _at_onupdate) {
      this.parent = _at_parent;
      this.onupdate = _at_onupdate;
      this.elements = {};
      this.editmode = false;
    }

    TitleManager.prototype.addTitle = function(titlevalue) {
      var element;
      element = new TitleElement(titlevalue, this);
      return this.elements[element.id] = element;
    };

    TitleManager.prototype.editTitle = function(element) {
      if (this.editmode) {
        return false;
      }
      this.editmode = true;
      this.elements[element.id] = new UpdateTitlePanel(element.textvalue, (function(_this) {
        return function(status, newvalue) {
          if (status) {
            element.textvalue = newvalue;
          }
          _this.elements[element.id] = element;
          _this.editmode = false;
          return typeof _this.onupdate === "function" ? _this.onupdate() : void 0;
        };
      })(this));
      return typeof this.onupdate === "function" ? this.onupdate() : void 0;
    };

    TitleManager.prototype.getTitle = function() {
      var first, k, v, _ref;
      _ref = (function() {
        var _ref, _results;
        _ref = this.elements;
        _results = [];
        for (k in _ref) {
          v = _ref[k];
          _results.push(v.textvalue);
        }
        return _results;
      }).call(this), first = _ref[0];
      return first;
    };

    TitleManager.prototype.dom = function() {
      var k, v;
      return {
        type: "div",
        cls: "row",
        children: {
          type: "div",
          cls: "column",
          children: {
            type: "div",
            cls: "ui basic segment",
            children: {
              type: "div",
              cls: "ui horizontal list",
              children: (function() {
                var _ref, _results;
                _ref = this.elements;
                _results = [];
                for (k in _ref) {
                  v = _ref[k];
                  _results.push(v.dom());
                }
                return _results;
              }).call(this)
            }
          }
        }
      };
    };

    return TitleManager;

  })();

  if (this.TitleManager == null) {
    this.TitleManager = TitleManager;
  }

}).call(this);
